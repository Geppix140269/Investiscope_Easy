<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Property Calculator Module</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        * { box-sizing: border-box; }
        body { 
            margin: 0; 
            padding: 0; 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            -webkit-font-smoothing: antialiased;
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            background-size: 200% 200%;
            animation: gradientShift 10s ease infinite;
            min-height: 100vh;
        }
        
        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        .glass-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 24px;
            padding: 40px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.15);
            border: 1px solid rgba(255, 255, 255, 0.5);
        }
        
        .fade-in { 
            animation: fadeIn 0.6s cubic-bezier(0.4, 0, 0.2, 1); 
        }
        
        @keyframes fadeIn { 
            from { opacity: 0; transform: translateY(20px); } 
            to { opacity: 1; transform: translateY(0); } 
        }
        
        .slider {
            -webkit-appearance: none;
            width: 100%;
            height: 10px;
            border-radius: 5px;
            background: #e5e7eb;
            outline: none;
            transition: all 0.3s;
        }
        
        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background: #667eea;
            cursor: pointer;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.5);
            transition: all 0.3s;
        }
        
        .slider::-webkit-slider-thumb:hover {
            transform: scale(1.2);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.7);
        }
        
        .slider::-moz-range-thumb {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background: #667eea;
            cursor: pointer;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.5);
        }
        
        .value-display {
            background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
            padding: 12px 20px;
            border-radius: 12px;
            font-size: 20px;
            font-weight: 700;
            color: #1f2937;
            text-align: center;
            min-width: 140px;
            box-shadow: inset 0 2px 4px rgba(0,0,0,0.06);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #059669 0%, #047857 100%);
            color: white;
            padding: 18px 36px;
            border-radius: 16px;
            border: none;
            font-size: 17px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 6px 20px rgba(5, 150, 105, 0.35);
            width: 100%;
        }
        
        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(5, 150, 105, 0.45);
        }
        
        .result-box {
            background: linear-gradient(135deg, #f8f9fa 0%, #f3f4f6 100%);
            padding: 24px;
            border-radius: 18px;
            text-align: center;
            transition: all 0.3s;
            position: relative;
            overflow: hidden;
        }
        
        .result-box:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.08);
        }
        
        @media (max-width: 640px) {
            .glass-card { padding: 28px; }
        }
    </style>
</head>
<body class="gradient-bg">
    <div class="fade-in" style="max-width: 900px; margin: 0 auto; padding: 24px;">
        <div style="text-align: center; margin-bottom: 40px;">
            <h1 style="font-size: 48px; font-weight: 200; color: white; margin-bottom: 16px; letter-spacing: -2px;">
                Property Investment Calculator
            </h1>
            <p style="font-size: 20px; color: rgba(255,255,255,0.9);">
                Calculate your investment potential with Mini PIA grants
            </p>
        </div>
        
        <div class="glass-card">
            <h2 style="font-size: 32px; font-weight: 700; color: #1a1a1a; margin-bottom: 40px; text-align: center;">
                üè° Enter Property Details
            </h2>
            
            <!-- Property Price -->
            <div style="margin-bottom: 32px;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
                    <label style="font-size: 17px; font-weight: 600; color: #374151;">
                        Property Price
                    </label>
                    <div class="value-display" id="price-value">‚Ç¨250,000</div>
                </div>
                <input type="range" class="slider" id="price-slider" 
                    min="50000" max="1000000" step="10000" value="250000"
                    oninput="CalculatorModule.updateValue('price', this.value)">
                <div style="display: flex; justify-content: space-between; margin-top: 12px; font-size: 13px; color: #6b7280;">
                    <span>‚Ç¨50k</span>
                    <span>‚Ç¨500k</span>
                    <span>‚Ç¨1M</span>
                </div>
            </div>
            
            <!-- Property Size -->
            <div style="margin-bottom: 32px;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
                    <label style="font-size: 17px; font-weight: 600; color: #374151;">
                        Built Property Size
                    </label>
                    <div class="value-display" id="size-value">120 m¬≤</div>
                </div>
                <input type="range" class="slider" id="size-slider" 
                    min="50" max="500" step="10" value="120"
                    oninput="CalculatorModule.updateValue('size', this.value)">
                <div style="display: flex; justify-content: space-between; margin-top: 12px; font-size: 13px; color: #6b7280;">
                    <span>50 m¬≤</span>
                    <span>250 m¬≤</span>
                    <span>500 m¬≤</span>
                </div>
            </div>
            
            <!-- Number of Bedrooms -->
            <div style="margin-bottom: 32px;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
                    <label style="font-size: 17px; font-weight: 600; color: #374151;">
                        Number of Bedrooms
                    </label>
                    <div class="value-display" id="bedrooms-value">3 bedrooms</div>
                </div>
                <input type="range" class="slider" id="bedrooms-slider" 
                    min="1" max="10" step="1" value="3"
                    oninput="CalculatorModule.updateValue('bedrooms', this.value)">
                <div style="display: flex; justify-content: space-between; margin-top: 12px; font-size: 13px; color: #6b7280;">
                    <span>1</span>
                    <span>5</span>
                    <span>10</span>
                </div>
            </div>
            
            <!-- Renovation Level -->
            <div style="margin-bottom: 40px;">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
                    <label style="font-size: 17px; font-weight: 600; color: #374151;">
                        Renovation Cost per m¬≤
                    </label>
                    <div class="value-display" id="renovationLevel-value">‚Ç¨1,000/m¬≤</div>
                </div>
                <input type="range" class="slider" id="renovation-slider" 
                    min="500" max="1500" step="50" value="1000"
                    oninput="CalculatorModule.updateValue('renovationLevel', this.value)">
                <div style="display: flex; justify-content: space-between; margin-top: 12px; font-size: 13px; color: #6b7280;">
                    <span>Light (‚Ç¨500)</span>
                    <span>Standard (‚Ç¨1,000)</span>
                    <span>Full (‚Ç¨1,500)</span>
                </div>
            </div>
            
            <!-- Quick Preview -->
            <div style="background: linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%); padding: 28px; border-radius: 20px; margin: 40px 0; box-shadow: 0 4px 20px rgba(59, 130, 246, 0.1);">
                <h3 style="font-size: 20px; font-weight: 600; color: #1e40af; margin-bottom: 20px; display: flex; align-items: center; gap: 8px;">
                    <span style="font-size: 24px;">üìä</span> Quick Investment Preview
                </h3>
                <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 20px;">
                    <div style="background: white; padding: 20px; border-radius: 16px; text-align: center; box-shadow: 0 2px 8px rgba(0,0,0,0.05);">
                        <div style="color: #3730a3; font-size: 15px; margin-bottom: 8px;">Total Investment</div>
                        <div style="font-size: 28px; font-weight: 800; color: #1e40af;" id="preview-total">‚Ç¨403,680</div>
                    </div>
                    <div style="background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%); padding: 20px; border-radius: 16px; text-align: center; box-shadow: 0 2px 8px rgba(16, 185, 129, 0.1);">
                        <div style="color: #14532d; font-size: 15px; margin-bottom: 8px;">Est. Mini PIA Grant*</div>
                        <div style="font-size: 28px; font-weight: 800; color: #059669;" id="preview-grant">‚Ç¨181,656</div>
                    </div>
                </div>
                <p style="font-size: 13px; color: #6b7280; margin-top: 16px; text-align: center;">
                    *Subject to eligibility verification ‚Ä¢ Puglia properties only
                </p>
            </div>
            
            <button onclick="CalculatorModule.generateOutput()" class="btn-primary">
                Continue to Eligibility Check ‚Üí
            </button>
            
            <p style="text-align: center; color: #6b7280; font-size: 15px; margin-top: 20px;">
                ‚úì 100% Free ‚Ä¢ ‚úì No Registration Required ‚Ä¢ ‚úì Instant Results
            </p>
        </div>
        
        <!-- Results (hidden initially) -->
        <div id="results" class="hidden glass-card" style="margin-top: 24px;">
            <h2 style="font-size: 28px; font-weight: 700; color: #1a1a1a; margin-bottom: 32px; text-align: center;">
                üìä Calculation Complete
            </h2>
            
            <p style="text-align: center; color: #4b5563; font-size: 18px; margin-bottom: 32px;">
                Your property investment calculations are ready. Click below to check Mini PIA eligibility.
            </p>
            
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 32px;">
                <div class="result-box">
                    <div style="color: #6b7280; font-size: 14px; margin-bottom: 8px;">Total Investment</div>
                    <div style="font-size: 26px; font-weight: 700; color: #1a1a1a;" id="result-total-summary"></div>
                </div>
                <div class="result-box">
                    <div style="color: #6b7280; font-size: 14px; margin-bottom: 8px;">Potential Grant</div>
                    <div style="font-size: 26px; font-weight: 700; color: #059669;" id="result-grant-summary"></div>
                </div>
                <div class="result-box">
                    <div style="color: #6b7280; font-size: 14px; margin-bottom: 8px;">Your Investment</div>
                    <div style="font-size: 26px; font-weight: 700; color: #1a1a1a;" id="result-your-cost-summary"></div>
                </div>
            </div>
            
            <div style="text-align: center;">
                <p style="color: #059669; font-size: 16px; font-weight: 600; margin-bottom: 24px;">
                    ‚úì Calculations saved and ready for eligibility check
                </p>
                <button onclick="CalculatorModule.proceedToNext()" class="btn-primary" style="max-width: 400px; margin: 0 auto;">
                    Continue to Eligibility Questions ‚Üí
                </button>
            </div>
        </div>
    </div>

    <script>
        const CalculatorModule = {
            // Internal state
            inputs: {
                price: 250000,
                size: 120,
                bedrooms: 3,
                renovationLevel: 1000
            },

            // Update slider values
            updateValue(key, value) {
                this.inputs[key] = parseInt(value);
                const displayValue = key === 'price' ? `‚Ç¨${parseInt(value).toLocaleString()}` :
                                   key === 'size' ? `${value} m¬≤` :
                                   key === 'bedrooms' ? `${value} bedrooms` :
                                   key === 'renovationLevel' ? `‚Ç¨${value}/m¬≤` : value;
                
                document.getElementById(`${key}-value`).textContent = displayValue;
                
                // Update preview
                this.updatePreview();
            },
            
            // Update preview calculations
            updatePreview() {
                const { price, size, renovationLevel } = this.inputs;
                const renovationCost = size * renovationLevel;
                const professionalFees = renovationCost * 0.15;
                const taxesAndFees = price * 0.14;
                const totalProject = price + renovationCost + professionalFees + taxesAndFees;
                const grant = (renovationCost + professionalFees + taxesAndFees) * 0.45;
                
                document.getElementById('preview-total').textContent = `‚Ç¨${Math.round(totalProject).toLocaleString()}`;
                document.getElementById('preview-grant').textContent = `‚Ç¨${Math.round(grant).toLocaleString()}`;
            },

            // Calculate all values
            calculate() {
                const { price, size, bedrooms, renovationLevel } = this.inputs;
                
                // Cost calculations
                const renovationCost = size * renovationLevel;
                const professionalFees = renovationCost * 0.15; // 15% for architect, PM, etc.
                const agencyFee = price * 0.03; // 3% agency
                const notaryFee = price * 0.025; // 2.5% notary
                const registrationTax = price * 0.09; // 9% registration tax
                const taxesAndFees = agencyFee + notaryFee + registrationTax;
                
                const totalProject = price + renovationCost + professionalFees + taxesAndFees;
                
                // Grant calculation (45% of eligible costs)
                const eligibleCosts = renovationCost + professionalFees + taxesAndFees;
                const grant = eligibleCosts * 0.45;
                const yourCost = totalProject - grant;
                
                // Future value and returns
                const appreciationRate = 0.035; // 3.5% annual
                const futureValue = price * Math.pow(1 + appreciationRate, 5);
                const capitalGain = futureValue - price;
                
                // ROI calculations
                const roiWithGrant = ((capitalGain + (totalProject - yourCost)) / yourCost) * 100;
                const roiWithoutGrant = (capitalGain / totalProject) * 100;
                
                // Rental income
                const annualRate = 0.18; // 18% gross rental yield
                const managementFee = 0.20; // 20% management
                const annualRental = price * annualRate * (1 - managementFee);
                const monthlyRental = annualRental / 12;
                
                return {
                    inputs: this.inputs,
                    calculations: {
                        renovationCost,
                        professionalFees,
                        agencyFee,
                        notaryFee,
                        registrationTax,
                        taxesAndFees,
                        totalProject,
                        eligibleCosts,
                        grant,
                        yourCost
                    },
                    miniPIA: {
                        eligibleAmount: eligibleCosts,
                        grantRate: 45,
                        grantAmount: grant,
                        yourContribution: yourCost
                    },
                    returns: {
                        futureValue,
                        capitalGain,
                        withGrant: {
                            roi: roiWithGrant,
                            totalReturn: capitalGain + (totalProject - yourCost),
                            netCashFlow: (annualRental * 5) - yourCost
                        },
                        withoutGrant: {
                            roi: roiWithoutGrant,
                            totalReturn: capitalGain,
                            netCashFlow: (annualRental * 5) - totalProject
                        }
                    },
                    rental: {
                        grossYield: 18,
                        managementFee: 20,
                        annualIncome: annualRental,
                        monthlyIncome: monthlyRental
                    },
                    summary: {
                        totalInvestment: totalProject,
                        miniPIAGrant: grant,
                        yourInvestment: yourCost,
                        fiveYearROI: roiWithGrant,
                        annualRental: annualRental
                    }
                };
            },

            // Generate output and display results
            generateOutput() {
                const output = this.calculate();
                
                // Hide input section and show results
                document.querySelector('.glass-card').style.display = 'none';
                document.getElementById('results').classList.remove('hidden');
                
                // Update summary display
                document.getElementById('result-total-summary').textContent = `‚Ç¨${output.calculations.totalProject.toLocaleString()}`;
                document.getElementById('result-grant-summary').textContent = `‚Ç¨${output.calculations.grant.toLocaleString()}`;
                document.getElementById('result-your-cost-summary').textContent = `‚Ç¨${output.calculations.yourCost.toLocaleString()}`;
                
                // Store output for next module
                window.calculatorOutput = output;
                
                console.log('Calculator output generated:', output);
            },
            
            // Proceed to next module
            proceedToNext() {
                const output = this.calculate();
                
                // Send data to parent frame if embedded
                if (window.parent !== window) {
                    window.parent.postMessage({
                        type: 'CALCULATOR_COMPLETE',
                        data: output
                    }, '*');
                }
            }
        };
        
        // Initialize preview on load
        window.addEventListener('DOMContentLoaded', function() {
            CalculatorModule.updatePreview();
        });
    </script>
</body>
</html>
